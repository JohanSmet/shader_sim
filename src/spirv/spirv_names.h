// spirv_names.h - Johan Smet - BSD-3-Clause (see LICENSE)
//
// converts SPIR-V enums to strings
// (do not edit - autogenerated by spirv/generate_names/generate.py)

#ifndef JS_SPIRV_NAMES_H
#define JS_SPIRV_NAMES_H

#include "spirv.h"

#ifdef JS_SPIRV_NAMES_IMPLEMENTATION

const char *SPIRV_SOURCE_LANGUAGES[] = {
	[SpvSourceLanguageUnknown] = "Unknown",
	[SpvSourceLanguageESSL] = "ESSL",
	[SpvSourceLanguageGLSL] = "GLSL",
	[SpvSourceLanguageOpenCL_C] = "OpenCL_C",
	[SpvSourceLanguageOpenCL_CPP] = "OpenCL_CPP",
	[SpvSourceLanguageHLSL] = "HLSL",
};

const char *spirv_source_language_name(SpvSourceLanguage e) {
	return SPIRV_SOURCE_LANGUAGES[e];
}

const char *SPIRV_EXECUTION_MODELS[] = {
	[SpvExecutionModelVertex] = "Vertex",
	[SpvExecutionModelTessellationControl] = "TessellationControl",
	[SpvExecutionModelTessellationEvaluation] = "TessellationEvaluation",
	[SpvExecutionModelGeometry] = "Geometry",
	[SpvExecutionModelFragment] = "Fragment",
	[SpvExecutionModelGLCompute] = "GLCompute",
	[SpvExecutionModelKernel] = "Kernel",
};

const char *spirv_execution_model_name(SpvExecutionModel e) {
	return SPIRV_EXECUTION_MODELS[e];
}

const char *SPIRV_ADDRESSING_MODELS[] = {
	[SpvAddressingModelLogical] = "Logical",
	[SpvAddressingModelPhysical32] = "Physical32",
	[SpvAddressingModelPhysical64] = "Physical64",
};

const char *spirv_addressing_model_name(SpvAddressingModel e) {
	return SPIRV_ADDRESSING_MODELS[e];
}

const char *SPIRV_MEMORY_MODELS[] = {
	[SpvMemoryModelSimple] = "Simple",
	[SpvMemoryModelGLSL450] = "GLSL450",
	[SpvMemoryModelOpenCL] = "OpenCL",
};

const char *spirv_memory_model_name(SpvMemoryModel e) {
	return SPIRV_MEMORY_MODELS[e];
}

const char *SPIRV_EXECUTION_MODES[] = {
	[SpvExecutionModeInvocations] = "Invocations",
	[SpvExecutionModeSpacingEqual] = "SpacingEqual",
	[SpvExecutionModeSpacingFractionalEven] = "SpacingFractionalEven",
	[SpvExecutionModeSpacingFractionalOdd] = "SpacingFractionalOdd",
	[SpvExecutionModeVertexOrderCw] = "VertexOrderCw",
	[SpvExecutionModeVertexOrderCcw] = "VertexOrderCcw",
	[SpvExecutionModePixelCenterInteger] = "PixelCenterInteger",
	[SpvExecutionModeOriginUpperLeft] = "OriginUpperLeft",
	[SpvExecutionModeOriginLowerLeft] = "OriginLowerLeft",
	[SpvExecutionModeEarlyFragmentTests] = "EarlyFragmentTests",
	[SpvExecutionModePointMode] = "PointMode",
	[SpvExecutionModeXfb] = "Xfb",
	[SpvExecutionModeDepthReplacing] = "DepthReplacing",
	[SpvExecutionModeDepthGreater] = "DepthGreater",
	[SpvExecutionModeDepthLess] = "DepthLess",
	[SpvExecutionModeDepthUnchanged] = "DepthUnchanged",
	[SpvExecutionModeLocalSize] = "LocalSize",
	[SpvExecutionModeLocalSizeHint] = "LocalSizeHint",
	[SpvExecutionModeInputPoints] = "InputPoints",
	[SpvExecutionModeInputLines] = "InputLines",
	[SpvExecutionModeInputLinesAdjacency] = "InputLinesAdjacency",
	[SpvExecutionModeTriangles] = "Triangles",
	[SpvExecutionModeInputTrianglesAdjacency] = "InputTrianglesAdjacency",
	[SpvExecutionModeQuads] = "Quads",
	[SpvExecutionModeIsolines] = "Isolines",
	[SpvExecutionModeOutputVertices] = "OutputVertices",
	[SpvExecutionModeOutputPoints] = "OutputPoints",
	[SpvExecutionModeOutputLineStrip] = "OutputLineStrip",
	[SpvExecutionModeOutputTriangleStrip] = "OutputTriangleStrip",
	[SpvExecutionModeVecTypeHint] = "VecTypeHint",
	[SpvExecutionModeContractionOff] = "ContractionOff",
	[SpvExecutionModeInitializer] = "Initializer",
	[SpvExecutionModeFinalizer] = "Finalizer",
	[SpvExecutionModeSubgroupSize] = "SubgroupSize",
	[SpvExecutionModeSubgroupsPerWorkgroup] = "SubgroupsPerWorkgroup",
	[SpvExecutionModeSubgroupsPerWorkgroupId] = "SubgroupsPerWorkgroupId",
	[SpvExecutionModeLocalSizeId] = "LocalSizeId",
	[SpvExecutionModeLocalSizeHintId] = "LocalSizeHintId",
	[SpvExecutionModePostDepthCoverage] = "PostDepthCoverage",
	[SpvExecutionModeStencilRefReplacingEXT] = "StencilRefReplacingEXT",
};

const char *spirv_execution_mode_name(SpvExecutionMode e) {
	return SPIRV_EXECUTION_MODES[e];
}

const char *SPIRV_DIMS[] = {
	[SpvDim1D] = "Dim1D",
	[SpvDim2D] = "Dim2D",
	[SpvDim3D] = "Dim3D",
	[SpvDimCube] = "Cube",
	[SpvDimRect] = "Rect",
	[SpvDimBuffer] = "Buffer",
	[SpvDimSubpassData] = "SubpassData",
};

const char *spirv_dim_name(SpvDim e) {
	return SPIRV_DIMS[e];
}

const char *SPIRV_STORAGE_CLASSES[] = {
	[SpvStorageClassUniformConstant] = "UniformConstant",
	[SpvStorageClassInput] = "Input",
	[SpvStorageClassUniform] = "Uniform",
	[SpvStorageClassOutput] = "Output",
	[SpvStorageClassWorkgroup] = "Workgroup",
	[SpvStorageClassCrossWorkgroup] = "CrossWorkgroup",
	[SpvStorageClassPrivate] = "Private",
	[SpvStorageClassFunction] = "Function",
	[SpvStorageClassGeneric] = "Generic",
	[SpvStorageClassPushConstant] = "PushConstant",
	[SpvStorageClassAtomicCounter] = "AtomicCounter",
	[SpvStorageClassImage] = "Image",
	[SpvStorageClassStorageBuffer] = "StorageBuffer",
};

const char *spirv_storage_class_name(SpvStorageClass e) {
	return SPIRV_STORAGE_CLASSES[e];
}

const char *SPIRV_SAMPLER_ADDRESSING_MODES[] = {
	[SpvSamplerAddressingModeNone] = "None",
	[SpvSamplerAddressingModeClampToEdge] = "ClampToEdge",
	[SpvSamplerAddressingModeClamp] = "Clamp",
	[SpvSamplerAddressingModeRepeat] = "Repeat",
	[SpvSamplerAddressingModeRepeatMirrored] = "RepeatMirrored",
};

const char *spirv_sampler_addressing_mode_name(SpvSamplerAddressingMode e) {
	return SPIRV_SAMPLER_ADDRESSING_MODES[e];
}

const char *SPIRV_SAMPLER_FILTER_MODES[] = {
	[SpvSamplerFilterModeNearest] = "Nearest",
	[SpvSamplerFilterModeLinear] = "Linear",
};

const char *spirv_sampler_filter_mode_name(SpvSamplerFilterMode e) {
	return SPIRV_SAMPLER_FILTER_MODES[e];
}

const char *SPIRV_IMAGE_FORMATS[] = {
	[SpvImageFormatUnknown] = "Unknown",
	[SpvImageFormatRgba32f] = "Rgba32f",
	[SpvImageFormatRgba16f] = "Rgba16f",
	[SpvImageFormatR32f] = "R32f",
	[SpvImageFormatRgba8] = "Rgba8",
	[SpvImageFormatRgba8Snorm] = "Rgba8Snorm",
	[SpvImageFormatRg32f] = "Rg32f",
	[SpvImageFormatRg16f] = "Rg16f",
	[SpvImageFormatR11fG11fB10f] = "R11fG11fB10f",
	[SpvImageFormatR16f] = "R16f",
	[SpvImageFormatRgba16] = "Rgba16",
	[SpvImageFormatRgb10A2] = "Rgb10A2",
	[SpvImageFormatRg16] = "Rg16",
	[SpvImageFormatRg8] = "Rg8",
	[SpvImageFormatR16] = "R16",
	[SpvImageFormatR8] = "R8",
	[SpvImageFormatRgba16Snorm] = "Rgba16Snorm",
	[SpvImageFormatRg16Snorm] = "Rg16Snorm",
	[SpvImageFormatRg8Snorm] = "Rg8Snorm",
	[SpvImageFormatR16Snorm] = "R16Snorm",
	[SpvImageFormatR8Snorm] = "R8Snorm",
	[SpvImageFormatRgba32i] = "Rgba32i",
	[SpvImageFormatRgba16i] = "Rgba16i",
	[SpvImageFormatRgba8i] = "Rgba8i",
	[SpvImageFormatR32i] = "R32i",
	[SpvImageFormatRg32i] = "Rg32i",
	[SpvImageFormatRg16i] = "Rg16i",
	[SpvImageFormatRg8i] = "Rg8i",
	[SpvImageFormatR16i] = "R16i",
	[SpvImageFormatR8i] = "R8i",
	[SpvImageFormatRgba32ui] = "Rgba32ui",
	[SpvImageFormatRgba16ui] = "Rgba16ui",
	[SpvImageFormatRgba8ui] = "Rgba8ui",
	[SpvImageFormatR32ui] = "R32ui",
	[SpvImageFormatRgb10a2ui] = "Rgb10a2ui",
	[SpvImageFormatRg32ui] = "Rg32ui",
	[SpvImageFormatRg16ui] = "Rg16ui",
	[SpvImageFormatRg8ui] = "Rg8ui",
	[SpvImageFormatR16ui] = "R16ui",
	[SpvImageFormatR8ui] = "R8ui",
};

const char *spirv_image_format_name(SpvImageFormat e) {
	return SPIRV_IMAGE_FORMATS[e];
}

const char *SPIRV_IMAGE_CHANNEL_ORDERS[] = {
	[SpvImageChannelOrderR] = "R",
	[SpvImageChannelOrderA] = "A",
	[SpvImageChannelOrderRG] = "RG",
	[SpvImageChannelOrderRA] = "RA",
	[SpvImageChannelOrderRGB] = "RGB",
	[SpvImageChannelOrderRGBA] = "RGBA",
	[SpvImageChannelOrderBGRA] = "BGRA",
	[SpvImageChannelOrderARGB] = "ARGB",
	[SpvImageChannelOrderIntensity] = "Intensity",
	[SpvImageChannelOrderLuminance] = "Luminance",
	[SpvImageChannelOrderRx] = "Rx",
	[SpvImageChannelOrderRGx] = "RGx",
	[SpvImageChannelOrderRGBx] = "RGBx",
	[SpvImageChannelOrderDepth] = "Depth",
	[SpvImageChannelOrderDepthStencil] = "DepthStencil",
	[SpvImageChannelOrdersRGB] = "sRGB",
	[SpvImageChannelOrdersRGBx] = "sRGBx",
	[SpvImageChannelOrdersRGBA] = "sRGBA",
	[SpvImageChannelOrdersBGRA] = "sBGRA",
	[SpvImageChannelOrderABGR] = "ABGR",
};

const char *spirv_image_channel_order_name(SpvImageChannelOrder e) {
	return SPIRV_IMAGE_CHANNEL_ORDERS[e];
}

const char *SPIRV_IMAGE_CHANNEL_DATATYPES[] = {
	[SpvImageChannelDataTypeSnormInt8] = "SnormInt8",
	[SpvImageChannelDataTypeSnormInt16] = "SnormInt16",
	[SpvImageChannelDataTypeUnormInt8] = "UnormInt8",
	[SpvImageChannelDataTypeUnormInt16] = "UnormInt16",
	[SpvImageChannelDataTypeUnormShort565] = "UnormShort565",
	[SpvImageChannelDataTypeUnormShort555] = "UnormShort555",
	[SpvImageChannelDataTypeUnormInt101010] = "UnormInt101010",
	[SpvImageChannelDataTypeSignedInt8] = "SignedInt8",
	[SpvImageChannelDataTypeSignedInt16] = "SignedInt16",
	[SpvImageChannelDataTypeSignedInt32] = "SignedInt32",
	[SpvImageChannelDataTypeUnsignedInt8] = "UnsignedInt8",
	[SpvImageChannelDataTypeUnsignedInt16] = "UnsignedInt16",
	[SpvImageChannelDataTypeUnsignedInt32] = "UnsignedInt32",
	[SpvImageChannelDataTypeHalfFloat] = "HalfFloat",
	[SpvImageChannelDataTypeFloat] = "Float",
	[SpvImageChannelDataTypeUnormInt24] = "UnormInt24",
	[SpvImageChannelDataTypeUnormInt101010_2] = "UnormInt101010_2",
};

const char *spirv_image_channel_datatype_name(SpvImageChannelDataType e) {
	return SPIRV_IMAGE_CHANNEL_DATATYPES[e];
}

const char *SPIRV_IMAGE_OPERANDS[] = {
	[SpvImageOperandsMaskNone] = "None",
	[SpvImageOperandsBiasMask] = "Bias",
	[SpvImageOperandsLodMask] = "Lod",
	[SpvImageOperandsGradMask] = "Grad",
	[SpvImageOperandsConstOffsetMask] = "ConstOffset",
	[SpvImageOperandsOffsetMask] = "Offset",
	[SpvImageOperandsConstOffsetsMask] = "ConstOffsets",
	[SpvImageOperandsSampleMask] = "Sample",
	[SpvImageOperandsMinLodMask] = "MinLod",
};

const char *spirv_image_operands_name(SpvImageOperandsMask e) {
	return SPIRV_IMAGE_OPERANDS[e];
}

const char *SPIRV_FP_FASTMATH_MODE[] = {
	[SpvFPFastMathModeMaskNone] = "None",
	[SpvFPFastMathModeNotNaNMask] = "NotNaN",
	[SpvFPFastMathModeNotInfMask] = "NotInf",
	[SpvFPFastMathModeNSZMask] = "NSZ",
	[SpvFPFastMathModeAllowRecipMask] = "AllowRecip",
	[SpvFPFastMathModeFastMask] = "Fast",
};

const char *spirv_fp_fastmath_mode_name(SpvFPFastMathModeMask e) {
	return SPIRV_FP_FASTMATH_MODE[e];
}

const char *SPIRV_FP_ROUNDING_MODES[] = {
	[SpvFPRoundingModeRTE] = "RTE",
	[SpvFPRoundingModeRTZ] = "RTZ",
	[SpvFPRoundingModeRTP] = "RTP",
	[SpvFPRoundingModeRTN] = "RTN",
};

const char *spirv_fp_rounding_mode_name(SpvFPRoundingMode e) {
	return SPIRV_FP_ROUNDING_MODES[e];
}

const char *SPIRV_LINKAGE_TYPES[] = {
	[SpvLinkageTypeExport] = "Export",
	[SpvLinkageTypeImport] = "Import",
};

const char *spirv_linkage_type_name(SpvLinkageType e) {
	return SPIRV_LINKAGE_TYPES[e];
}

const char *SPIRV_ACCESS_QUALIFIERS[] = {
	[SpvAccessQualifierReadOnly] = "ReadOnly",
	[SpvAccessQualifierWriteOnly] = "WriteOnly",
	[SpvAccessQualifierReadWrite] = "ReadWrite",
};

const char *spirv_access_qualifier_name(SpvAccessQualifier e) {
	return SPIRV_ACCESS_QUALIFIERS[e];
}

const char *SPIRV_FUNCTION_PARAMETER_ATTRIBUTE[] = {
	[SpvFunctionParameterAttributeZext] = "Zext",
	[SpvFunctionParameterAttributeSext] = "Sext",
	[SpvFunctionParameterAttributeByVal] = "ByVal",
	[SpvFunctionParameterAttributeSret] = "Sret",
	[SpvFunctionParameterAttributeNoAlias] = "NoAlias",
	[SpvFunctionParameterAttributeNoCapture] = "NoCapture",
	[SpvFunctionParameterAttributeNoWrite] = "NoWrite",
	[SpvFunctionParameterAttributeNoReadWrite] = "NoReadWrite",
};

const char *spirv_function_parameter_attribute_name(SpvFunctionParameterAttribute e) {
	return SPIRV_FUNCTION_PARAMETER_ATTRIBUTE[e];
}

const char *SPIRV_DECORATIONS[] = {
	[SpvDecorationRelaxedPrecision] = "RelaxedPrecision",
	[SpvDecorationSpecId] = "SpecId",
	[SpvDecorationBlock] = "Block",
	[SpvDecorationBufferBlock] = "BufferBlock",
	[SpvDecorationRowMajor] = "RowMajor",
	[SpvDecorationColMajor] = "ColMajor",
	[SpvDecorationArrayStride] = "ArrayStride",
	[SpvDecorationMatrixStride] = "MatrixStride",
	[SpvDecorationGLSLShared] = "GLSLShared",
	[SpvDecorationGLSLPacked] = "GLSLPacked",
	[SpvDecorationCPacked] = "CPacked",
	[SpvDecorationBuiltIn] = "BuiltIn",
	[SpvDecorationNoPerspective] = "NoPerspective",
	[SpvDecorationFlat] = "Flat",
	[SpvDecorationPatch] = "Patch",
	[SpvDecorationCentroid] = "Centroid",
	[SpvDecorationSample] = "Sample",
	[SpvDecorationInvariant] = "Invariant",
	[SpvDecorationRestrict] = "Restrict",
	[SpvDecorationAliased] = "Aliased",
	[SpvDecorationVolatile] = "Volatile",
	[SpvDecorationConstant] = "Constant",
	[SpvDecorationCoherent] = "Coherent",
	[SpvDecorationNonWritable] = "NonWritable",
	[SpvDecorationNonReadable] = "NonReadable",
	[SpvDecorationUniform] = "Uniform",
	[SpvDecorationSaturatedConversion] = "SaturatedConversion",
	[SpvDecorationStream] = "Stream",
	[SpvDecorationLocation] = "Location",
	[SpvDecorationComponent] = "Component",
	[SpvDecorationIndex] = "Index",
	[SpvDecorationBinding] = "Binding",
	[SpvDecorationDescriptorSet] = "DescriptorSet",
	[SpvDecorationOffset] = "Offset",
	[SpvDecorationXfbBuffer] = "XfbBuffer",
	[SpvDecorationXfbStride] = "XfbStride",
	[SpvDecorationFuncParamAttr] = "FuncParamAttr",
	[SpvDecorationFPRoundingMode] = "FPRoundingMode",
	[SpvDecorationFPFastMathMode] = "FPFastMathMode",
	[SpvDecorationLinkageAttributes] = "LinkageAttributes",
	[SpvDecorationNoContraction] = "NoContraction",
	[SpvDecorationInputAttachmentIndex] = "InputAttachmentIndex",
	[SpvDecorationAlignment] = "Alignment",
	[SpvDecorationMaxByteOffset] = "MaxByteOffset",
	[SpvDecorationAlignmentId] = "AlignmentId",
	[SpvDecorationMaxByteOffsetId] = "MaxByteOffsetId",
	[SpvDecorationExplicitInterpAMD] = "ExplicitInterpAMD",
	[SpvDecorationOverrideCoverageNV] = "OverrideCoverageNV",
	[SpvDecorationPassthroughNV] = "PassthroughNV",
	[SpvDecorationViewportRelativeNV] = "ViewportRelativeNV",
	[SpvDecorationSecondaryViewportRelativeNV] = "SecondaryViewportRelativeNV",
	[SpvDecorationHlslCounterBufferGOOGLE] = "HlslCounterBufferGOOGLE",
	[SpvDecorationHlslSemanticGOOGLE] = "HlslSemanticGOOGLE",
};

const char *spirv_decoration_name(SpvDecoration e) {
	return SPIRV_DECORATIONS[e];
}

const char *SPIRV_BUILT_INS[] = {
	[SpvBuiltInPosition] = "Position",
	[SpvBuiltInPointSize] = "PointSize",
	[SpvBuiltInClipDistance] = "ClipDistance",
	[SpvBuiltInCullDistance] = "CullDistance",
	[SpvBuiltInVertexId] = "VertexId",
	[SpvBuiltInInstanceId] = "InstanceId",
	[SpvBuiltInPrimitiveId] = "PrimitiveId",
	[SpvBuiltInInvocationId] = "InvocationId",
	[SpvBuiltInLayer] = "Layer",
	[SpvBuiltInViewportIndex] = "ViewportIndex",
	[SpvBuiltInTessLevelOuter] = "TessLevelOuter",
	[SpvBuiltInTessLevelInner] = "TessLevelInner",
	[SpvBuiltInTessCoord] = "TessCoord",
	[SpvBuiltInPatchVertices] = "PatchVertices",
	[SpvBuiltInFragCoord] = "FragCoord",
	[SpvBuiltInPointCoord] = "PointCoord",
	[SpvBuiltInFrontFacing] = "FrontFacing",
	[SpvBuiltInSampleId] = "SampleId",
	[SpvBuiltInSamplePosition] = "SamplePosition",
	[SpvBuiltInSampleMask] = "SampleMask",
	[SpvBuiltInFragDepth] = "FragDepth",
	[SpvBuiltInHelperInvocation] = "HelperInvocation",
	[SpvBuiltInNumWorkgroups] = "NumWorkgroups",
	[SpvBuiltInWorkgroupSize] = "WorkgroupSize",
	[SpvBuiltInWorkgroupId] = "WorkgroupId",
	[SpvBuiltInLocalInvocationId] = "LocalInvocationId",
	[SpvBuiltInGlobalInvocationId] = "GlobalInvocationId",
	[SpvBuiltInLocalInvocationIndex] = "LocalInvocationIndex",
	[SpvBuiltInWorkDim] = "WorkDim",
	[SpvBuiltInGlobalSize] = "GlobalSize",
	[SpvBuiltInEnqueuedWorkgroupSize] = "EnqueuedWorkgroupSize",
	[SpvBuiltInGlobalOffset] = "GlobalOffset",
	[SpvBuiltInGlobalLinearId] = "GlobalLinearId",
	[SpvBuiltInSubgroupSize] = "SubgroupSize",
	[SpvBuiltInSubgroupMaxSize] = "SubgroupMaxSize",
	[SpvBuiltInNumSubgroups] = "NumSubgroups",
	[SpvBuiltInNumEnqueuedSubgroups] = "NumEnqueuedSubgroups",
	[SpvBuiltInSubgroupId] = "SubgroupId",
	[SpvBuiltInSubgroupLocalInvocationId] = "SubgroupLocalInvocationId",
	[SpvBuiltInVertexIndex] = "VertexIndex",
	[SpvBuiltInInstanceIndex] = "InstanceIndex",
	[SpvBuiltInSubgroupEqMaskKHR] = "SubgroupEqMaskKHR",
	[SpvBuiltInSubgroupGeMaskKHR] = "SubgroupGeMaskKHR",
	[SpvBuiltInSubgroupGtMaskKHR] = "SubgroupGtMaskKHR",
	[SpvBuiltInSubgroupLeMaskKHR] = "SubgroupLeMaskKHR",
	[SpvBuiltInSubgroupLtMaskKHR] = "SubgroupLtMaskKHR",
	[SpvBuiltInBaseVertex] = "BaseVertex",
	[SpvBuiltInBaseInstance] = "BaseInstance",
	[SpvBuiltInDrawIndex] = "DrawIndex",
	[SpvBuiltInDeviceIndex] = "DeviceIndex",
	[SpvBuiltInViewIndex] = "ViewIndex",
	[SpvBuiltInBaryCoordNoPerspAMD] = "BaryCoordNoPerspAMD",
	[SpvBuiltInBaryCoordNoPerspCentroidAMD] = "BaryCoordNoPerspCentroidAMD",
	[SpvBuiltInBaryCoordNoPerspSampleAMD] = "BaryCoordNoPerspSampleAMD",
	[SpvBuiltInBaryCoordSmoothAMD] = "BaryCoordSmoothAMD",
	[SpvBuiltInBaryCoordSmoothCentroidAMD] = "BaryCoordSmoothCentroidAMD",
	[SpvBuiltInBaryCoordSmoothSampleAMD] = "BaryCoordSmoothSampleAMD",
	[SpvBuiltInBaryCoordPullModelAMD] = "BaryCoordPullModelAMD",
	[SpvBuiltInFragStencilRefEXT] = "FragStencilRefEXT",
	[SpvBuiltInViewportMaskNV] = "ViewportMaskNV",
	[SpvBuiltInSecondaryPositionNV] = "SecondaryPositionNV",
	[SpvBuiltInSecondaryViewportMaskNV] = "SecondaryViewportMaskNV",
	[SpvBuiltInPositionPerViewNV] = "PositionPerViewNV",
	[SpvBuiltInViewportMaskPerViewNV] = "ViewportMaskPerViewNV",
};

const char *spirv_builtin_name(SpvBuiltIn e) {
	return SPIRV_BUILT_INS[e];
}

const char *SPIRV_SELECTION_CONTROL[] = {
	[SpvSelectionControlMaskNone] = "None",
	[SpvSelectionControlFlattenMask] = "Flatten",
	[SpvSelectionControlDontFlattenMask] = "DontFlatten",
};

const char *spirv_selection_control_name(SpvSelectionControlMask e) {
	return SPIRV_SELECTION_CONTROL[e];
}

const char *SPIRV_LOOP_CONTROL[] = {
	[SpvLoopControlMaskNone] = "None",
	[SpvLoopControlUnrollMask] = "Unroll",
	[SpvLoopControlDontUnrollMask] = "DontUnroll",
	[SpvLoopControlDependencyInfiniteMask] = "DependencyInfinite",
	[SpvLoopControlDependencyLengthMask] = "DependencyLength",
};

const char *spirv_loop_control_name(SpvLoopControlMask e) {
	return SPIRV_LOOP_CONTROL[e];
}

const char *SPIRV_FUNCTION_CONTROL[] = {
	[SpvFunctionControlMaskNone] = "None",
	[SpvFunctionControlInlineMask] = "Inline",
	[SpvFunctionControlDontInlineMask] = "DontInline",
	[SpvFunctionControlPureMask] = "Pure",
	[SpvFunctionControlConstMask] = "Const",
};

const char *spirv_function_control_name(SpvFunctionControlMask e) {
	return SPIRV_FUNCTION_CONTROL[e];
}

const char *SPIRV_MEMORY_SEMANTICS[] = {
	[SpvMemorySemanticsMaskNone] = "None",
	[SpvMemorySemanticsAcquireMask] = "Acquire",
	[SpvMemorySemanticsReleaseMask] = "Release",
	[SpvMemorySemanticsAcquireReleaseMask] = "AcquireRelease",
	[SpvMemorySemanticsSequentiallyConsistentMask] = "SequentiallyConsistent",
	[SpvMemorySemanticsUniformMemoryMask] = "UniformMemory",
	[SpvMemorySemanticsSubgroupMemoryMask] = "SubgroupMemory",
	[SpvMemorySemanticsWorkgroupMemoryMask] = "WorkgroupMemory",
	[SpvMemorySemanticsCrossWorkgroupMemoryMask] = "CrossWorkgroupMemory",
	[SpvMemorySemanticsAtomicCounterMemoryMask] = "AtomicCounterMemory",
	[SpvMemorySemanticsImageMemoryMask] = "ImageMemory",
};

const char *spirv_memory_semantics_name(SpvMemorySemanticsMask e) {
	return SPIRV_MEMORY_SEMANTICS[e];
}

const char *SPIRV_MEMORY_ACCESS[] = {
	[SpvMemoryAccessMaskNone] = "None",
	[SpvMemoryAccessVolatileMask] = "Volatile",
	[SpvMemoryAccessAlignedMask] = "Aligned",
	[SpvMemoryAccessNontemporalMask] = "Nontemporal",
};

const char *spirv_memory_access_name(SpvMemoryAccessMask e) {
	return SPIRV_MEMORY_ACCESS[e];
}

const char *SPIRV_SCOPES[] = {
	[SpvScopeCrossDevice] = "CrossDevice",
	[SpvScopeDevice] = "Device",
	[SpvScopeWorkgroup] = "Workgroup",
	[SpvScopeSubgroup] = "Subgroup",
	[SpvScopeInvocation] = "Invocation",
};

const char *spirv_scope_name(SpvScope e) {
	return SPIRV_SCOPES[e];
}

const char *SPIRV_GROUP_OPERATIONS[] = {
	[SpvGroupOperationReduce] = "Reduce",
	[SpvGroupOperationInclusiveScan] = "InclusiveScan",
	[SpvGroupOperationExclusiveScan] = "ExclusiveScan",
};

const char *spirv_group_operation_name(SpvGroupOperation e) {
	return SPIRV_GROUP_OPERATIONS[e];
}

const char *SPIRV_KERNEL_ENQUEUE_FLAGS[] = {
	[SpvKernelEnqueueFlagsNoWait] = "NoWait",
	[SpvKernelEnqueueFlagsWaitKernel] = "WaitKernel",
	[SpvKernelEnqueueFlagsWaitWorkGroup] = "WaitWorkGroup",
};

const char *spirv_kernel_enqueue_flags_name(SpvKernelEnqueueFlags e) {
	return SPIRV_KERNEL_ENQUEUE_FLAGS[e];
}

const char *SPIRV_KERNEL_PROFILING_INFO[] = {
	[SpvKernelProfilingInfoMaskNone] = "None",
	[SpvKernelProfilingInfoCmdExecTimeMask] = "CmdExecTime",
};

const char *spirv_kernel_profiling_info_name(SpvKernelProfilingInfoMask e) {
	return SPIRV_KERNEL_PROFILING_INFO[e];
}

const char *SPIRV_CAPABILITIES[] = {
	[SpvCapabilityMatrix] = "Matrix",
	[SpvCapabilityShader] = "Shader",
	[SpvCapabilityGeometry] = "Geometry",
	[SpvCapabilityTessellation] = "Tessellation",
	[SpvCapabilityAddresses] = "Addresses",
	[SpvCapabilityLinkage] = "Linkage",
	[SpvCapabilityKernel] = "Kernel",
	[SpvCapabilityVector16] = "Vector16",
	[SpvCapabilityFloat16Buffer] = "Float16Buffer",
	[SpvCapabilityFloat16] = "Float16",
	[SpvCapabilityFloat64] = "Float64",
	[SpvCapabilityInt64] = "Int64",
	[SpvCapabilityInt64Atomics] = "Int64Atomics",
	[SpvCapabilityImageBasic] = "ImageBasic",
	[SpvCapabilityImageReadWrite] = "ImageReadWrite",
	[SpvCapabilityImageMipmap] = "ImageMipmap",
	[SpvCapabilityPipes] = "Pipes",
	[SpvCapabilityGroups] = "Groups",
	[SpvCapabilityDeviceEnqueue] = "DeviceEnqueue",
	[SpvCapabilityLiteralSampler] = "LiteralSampler",
	[SpvCapabilityAtomicStorage] = "AtomicStorage",
	[SpvCapabilityInt16] = "Int16",
	[SpvCapabilityTessellationPointSize] = "TessellationPointSize",
	[SpvCapabilityGeometryPointSize] = "GeometryPointSize",
	[SpvCapabilityImageGatherExtended] = "ImageGatherExtended",
	[SpvCapabilityStorageImageMultisample] = "StorageImageMultisample",
	[SpvCapabilityUniformBufferArrayDynamicIndexing] = "UniformBufferArrayDynamicIndexing",
	[SpvCapabilitySampledImageArrayDynamicIndexing] = "SampledImageArrayDynamicIndexing",
	[SpvCapabilityStorageBufferArrayDynamicIndexing] = "StorageBufferArrayDynamicIndexing",
	[SpvCapabilityStorageImageArrayDynamicIndexing] = "StorageImageArrayDynamicIndexing",
	[SpvCapabilityClipDistance] = "ClipDistance",
	[SpvCapabilityCullDistance] = "CullDistance",
	[SpvCapabilityImageCubeArray] = "ImageCubeArray",
	[SpvCapabilitySampleRateShading] = "SampleRateShading",
	[SpvCapabilityImageRect] = "ImageRect",
	[SpvCapabilitySampledRect] = "SampledRect",
	[SpvCapabilityGenericPointer] = "GenericPointer",
	[SpvCapabilityInt8] = "Int8",
	[SpvCapabilityInputAttachment] = "InputAttachment",
	[SpvCapabilitySparseResidency] = "SparseResidency",
	[SpvCapabilityMinLod] = "MinLod",
	[SpvCapabilitySampled1D] = "Sampled1D",
	[SpvCapabilityImage1D] = "Image1D",
	[SpvCapabilitySampledCubeArray] = "SampledCubeArray",
	[SpvCapabilitySampledBuffer] = "SampledBuffer",
	[SpvCapabilityImageBuffer] = "ImageBuffer",
	[SpvCapabilityImageMSArray] = "ImageMSArray",
	[SpvCapabilityStorageImageExtendedFormats] = "StorageImageExtendedFormats",
	[SpvCapabilityImageQuery] = "ImageQuery",
	[SpvCapabilityDerivativeControl] = "DerivativeControl",
	[SpvCapabilityInterpolationFunction] = "InterpolationFunction",
	[SpvCapabilityTransformFeedback] = "TransformFeedback",
	[SpvCapabilityGeometryStreams] = "GeometryStreams",
	[SpvCapabilityStorageImageReadWithoutFormat] = "StorageImageReadWithoutFormat",
	[SpvCapabilityStorageImageWriteWithoutFormat] = "StorageImageWriteWithoutFormat",
	[SpvCapabilityMultiViewport] = "MultiViewport",
	[SpvCapabilitySubgroupDispatch] = "SubgroupDispatch",
	[SpvCapabilityNamedBarrier] = "NamedBarrier",
	[SpvCapabilityPipeStorage] = "PipeStorage",
	[SpvCapabilitySubgroupBallotKHR] = "SubgroupBallotKHR",
	[SpvCapabilityDrawParameters] = "DrawParameters",
	[SpvCapabilitySubgroupVoteKHR] = "SubgroupVoteKHR",
	[SpvCapabilityStorageUniformBufferBlock16] = "StorageUniformBufferBlock16",
	[SpvCapabilityUniformAndStorageBuffer16BitAccess] = "UniformAndStorageBuffer16BitAccess",
	[SpvCapabilityStoragePushConstant16] = "StoragePushConstant16",
	[SpvCapabilityStorageInputOutput16] = "StorageInputOutput16",
	[SpvCapabilityDeviceGroup] = "DeviceGroup",
	[SpvCapabilityMultiView] = "MultiView",
	[SpvCapabilityVariablePointersStorageBuffer] = "VariablePointersStorageBuffer",
	[SpvCapabilityVariablePointers] = "VariablePointers",
	[SpvCapabilityAtomicStorageOps] = "AtomicStorageOps",
	[SpvCapabilitySampleMaskPostDepthCoverage] = "SampleMaskPostDepthCoverage",
	[SpvCapabilityImageGatherBiasLodAMD] = "ImageGatherBiasLodAMD",
	[SpvCapabilityFragmentMaskAMD] = "FragmentMaskAMD",
	[SpvCapabilityStencilExportEXT] = "StencilExportEXT",
	[SpvCapabilityImageReadWriteLodAMD] = "ImageReadWriteLodAMD",
	[SpvCapabilitySampleMaskOverrideCoverageNV] = "SampleMaskOverrideCoverageNV",
	[SpvCapabilityGeometryShaderPassthroughNV] = "GeometryShaderPassthroughNV",
	[SpvCapabilityShaderViewportIndexLayerEXT] = "ShaderViewportIndexLayerEXT",
	[SpvCapabilityShaderViewportMaskNV] = "ShaderViewportMaskNV",
	[SpvCapabilityShaderStereoViewNV] = "ShaderStereoViewNV",
	[SpvCapabilityPerViewAttributesNV] = "PerViewAttributesNV",
	[SpvCapabilitySubgroupShuffleINTEL] = "SubgroupShuffleINTEL",
	[SpvCapabilitySubgroupBufferBlockIOINTEL] = "SubgroupBufferBlockIOINTEL",
	[SpvCapabilitySubgroupImageBlockIOINTEL] = "SubgroupImageBlockIOINTEL",
};

const char *spirv_capability_name(SpvCapability e) {
	return SPIRV_CAPABILITIES[e];
}

const char *SPIRV_OPS[] = {
	[SpvOpNop] = "OpNop",
	[SpvOpUndef] = "OpUndef",
	[SpvOpSourceContinued] = "OpSourceContinued",
	[SpvOpSource] = "OpSource",
	[SpvOpSourceExtension] = "OpSourceExtension",
	[SpvOpName] = "OpName",
	[SpvOpMemberName] = "OpMemberName",
	[SpvOpString] = "OpString",
	[SpvOpLine] = "OpLine",
	[SpvOpExtension] = "OpExtension",
	[SpvOpExtInstImport] = "OpExtInstImport",
	[SpvOpExtInst] = "OpExtInst",
	[SpvOpMemoryModel] = "OpMemoryModel",
	[SpvOpEntryPoint] = "OpEntryPoint",
	[SpvOpExecutionMode] = "OpExecutionMode",
	[SpvOpCapability] = "OpCapability",
	[SpvOpTypeVoid] = "OpTypeVoid",
	[SpvOpTypeBool] = "OpTypeBool",
	[SpvOpTypeInt] = "OpTypeInt",
	[SpvOpTypeFloat] = "OpTypeFloat",
	[SpvOpTypeVector] = "OpTypeVector",
	[SpvOpTypeMatrix] = "OpTypeMatrix",
	[SpvOpTypeImage] = "OpTypeImage",
	[SpvOpTypeSampler] = "OpTypeSampler",
	[SpvOpTypeSampledImage] = "OpTypeSampledImage",
	[SpvOpTypeArray] = "OpTypeArray",
	[SpvOpTypeRuntimeArray] = "OpTypeRuntimeArray",
	[SpvOpTypeStruct] = "OpTypeStruct",
	[SpvOpTypeOpaque] = "OpTypeOpaque",
	[SpvOpTypePointer] = "OpTypePointer",
	[SpvOpTypeFunction] = "OpTypeFunction",
	[SpvOpTypeEvent] = "OpTypeEvent",
	[SpvOpTypeDeviceEvent] = "OpTypeDeviceEvent",
	[SpvOpTypeReserveId] = "OpTypeReserveId",
	[SpvOpTypeQueue] = "OpTypeQueue",
	[SpvOpTypePipe] = "OpTypePipe",
	[SpvOpTypeForwardPointer] = "OpTypeForwardPointer",
	[SpvOpConstantTrue] = "OpConstantTrue",
	[SpvOpConstantFalse] = "OpConstantFalse",
	[SpvOpConstant] = "OpConstant",
	[SpvOpConstantComposite] = "OpConstantComposite",
	[SpvOpConstantSampler] = "OpConstantSampler",
	[SpvOpConstantNull] = "OpConstantNull",
	[SpvOpSpecConstantTrue] = "OpSpecConstantTrue",
	[SpvOpSpecConstantFalse] = "OpSpecConstantFalse",
	[SpvOpSpecConstant] = "OpSpecConstant",
	[SpvOpSpecConstantComposite] = "OpSpecConstantComposite",
	[SpvOpSpecConstantOp] = "OpSpecConstantOp",
	[SpvOpFunction] = "OpFunction",
	[SpvOpFunctionParameter] = "OpFunctionParameter",
	[SpvOpFunctionEnd] = "OpFunctionEnd",
	[SpvOpFunctionCall] = "OpFunctionCall",
	[SpvOpVariable] = "OpVariable",
	[SpvOpImageTexelPointer] = "OpImageTexelPointer",
	[SpvOpLoad] = "OpLoad",
	[SpvOpStore] = "OpStore",
	[SpvOpCopyMemory] = "OpCopyMemory",
	[SpvOpCopyMemorySized] = "OpCopyMemorySized",
	[SpvOpAccessChain] = "OpAccessChain",
	[SpvOpInBoundsAccessChain] = "OpInBoundsAccessChain",
	[SpvOpPtrAccessChain] = "OpPtrAccessChain",
	[SpvOpArrayLength] = "OpArrayLength",
	[SpvOpGenericPtrMemSemantics] = "OpGenericPtrMemSemantics",
	[SpvOpInBoundsPtrAccessChain] = "OpInBoundsPtrAccessChain",
	[SpvOpDecorate] = "OpDecorate",
	[SpvOpMemberDecorate] = "OpMemberDecorate",
	[SpvOpDecorationGroup] = "OpDecorationGroup",
	[SpvOpGroupDecorate] = "OpGroupDecorate",
	[SpvOpGroupMemberDecorate] = "OpGroupMemberDecorate",
	[SpvOpVectorExtractDynamic] = "OpVectorExtractDynamic",
	[SpvOpVectorInsertDynamic] = "OpVectorInsertDynamic",
	[SpvOpVectorShuffle] = "OpVectorShuffle",
	[SpvOpCompositeConstruct] = "OpCompositeConstruct",
	[SpvOpCompositeExtract] = "OpCompositeExtract",
	[SpvOpCompositeInsert] = "OpCompositeInsert",
	[SpvOpCopyObject] = "OpCopyObject",
	[SpvOpTranspose] = "OpTranspose",
	[SpvOpSampledImage] = "OpSampledImage",
	[SpvOpImageSampleImplicitLod] = "OpImageSampleImplicitLod",
	[SpvOpImageSampleExplicitLod] = "OpImageSampleExplicitLod",
	[SpvOpImageSampleDrefImplicitLod] = "OpImageSampleDrefImplicitLod",
	[SpvOpImageSampleDrefExplicitLod] = "OpImageSampleDrefExplicitLod",
	[SpvOpImageSampleProjImplicitLod] = "OpImageSampleProjImplicitLod",
	[SpvOpImageSampleProjExplicitLod] = "OpImageSampleProjExplicitLod",
	[SpvOpImageSampleProjDrefImplicitLod] = "OpImageSampleProjDrefImplicitLod",
	[SpvOpImageSampleProjDrefExplicitLod] = "OpImageSampleProjDrefExplicitLod",
	[SpvOpImageFetch] = "OpImageFetch",
	[SpvOpImageGather] = "OpImageGather",
	[SpvOpImageDrefGather] = "OpImageDrefGather",
	[SpvOpImageRead] = "OpImageRead",
	[SpvOpImageWrite] = "OpImageWrite",
	[SpvOpImage] = "OpImage",
	[SpvOpImageQueryFormat] = "OpImageQueryFormat",
	[SpvOpImageQueryOrder] = "OpImageQueryOrder",
	[SpvOpImageQuerySizeLod] = "OpImageQuerySizeLod",
	[SpvOpImageQuerySize] = "OpImageQuerySize",
	[SpvOpImageQueryLod] = "OpImageQueryLod",
	[SpvOpImageQueryLevels] = "OpImageQueryLevels",
	[SpvOpImageQuerySamples] = "OpImageQuerySamples",
	[SpvOpConvertFToU] = "OpConvertFToU",
	[SpvOpConvertFToS] = "OpConvertFToS",
	[SpvOpConvertSToF] = "OpConvertSToF",
	[SpvOpConvertUToF] = "OpConvertUToF",
	[SpvOpUConvert] = "OpUConvert",
	[SpvOpSConvert] = "OpSConvert",
	[SpvOpFConvert] = "OpFConvert",
	[SpvOpQuantizeToF16] = "OpQuantizeToF16",
	[SpvOpConvertPtrToU] = "OpConvertPtrToU",
	[SpvOpSatConvertSToU] = "OpSatConvertSToU",
	[SpvOpSatConvertUToS] = "OpSatConvertUToS",
	[SpvOpConvertUToPtr] = "OpConvertUToPtr",
	[SpvOpPtrCastToGeneric] = "OpPtrCastToGeneric",
	[SpvOpGenericCastToPtr] = "OpGenericCastToPtr",
	[SpvOpGenericCastToPtrExplicit] = "OpGenericCastToPtrExplicit",
	[SpvOpBitcast] = "OpBitcast",
	[SpvOpSNegate] = "OpSNegate",
	[SpvOpFNegate] = "OpFNegate",
	[SpvOpIAdd] = "OpIAdd",
	[SpvOpFAdd] = "OpFAdd",
	[SpvOpISub] = "OpISub",
	[SpvOpFSub] = "OpFSub",
	[SpvOpIMul] = "OpIMul",
	[SpvOpFMul] = "OpFMul",
	[SpvOpUDiv] = "OpUDiv",
	[SpvOpSDiv] = "OpSDiv",
	[SpvOpFDiv] = "OpFDiv",
	[SpvOpUMod] = "OpUMod",
	[SpvOpSRem] = "OpSRem",
	[SpvOpSMod] = "OpSMod",
	[SpvOpFRem] = "OpFRem",
	[SpvOpFMod] = "OpFMod",
	[SpvOpVectorTimesScalar] = "OpVectorTimesScalar",
	[SpvOpMatrixTimesScalar] = "OpMatrixTimesScalar",
	[SpvOpVectorTimesMatrix] = "OpVectorTimesMatrix",
	[SpvOpMatrixTimesVector] = "OpMatrixTimesVector",
	[SpvOpMatrixTimesMatrix] = "OpMatrixTimesMatrix",
	[SpvOpOuterProduct] = "OpOuterProduct",
	[SpvOpDot] = "OpDot",
	[SpvOpIAddCarry] = "OpIAddCarry",
	[SpvOpISubBorrow] = "OpISubBorrow",
	[SpvOpUMulExtended] = "OpUMulExtended",
	[SpvOpSMulExtended] = "OpSMulExtended",
	[SpvOpAny] = "OpAny",
	[SpvOpAll] = "OpAll",
	[SpvOpIsNan] = "OpIsNan",
	[SpvOpIsInf] = "OpIsInf",
	[SpvOpIsFinite] = "OpIsFinite",
	[SpvOpIsNormal] = "OpIsNormal",
	[SpvOpSignBitSet] = "OpSignBitSet",
	[SpvOpLessOrGreater] = "OpLessOrGreater",
	[SpvOpOrdered] = "OpOrdered",
	[SpvOpUnordered] = "OpUnordered",
	[SpvOpLogicalEqual] = "OpLogicalEqual",
	[SpvOpLogicalNotEqual] = "OpLogicalNotEqual",
	[SpvOpLogicalOr] = "OpLogicalOr",
	[SpvOpLogicalAnd] = "OpLogicalAnd",
	[SpvOpLogicalNot] = "OpLogicalNot",
	[SpvOpSelect] = "OpSelect",
	[SpvOpIEqual] = "OpIEqual",
	[SpvOpINotEqual] = "OpINotEqual",
	[SpvOpUGreaterThan] = "OpUGreaterThan",
	[SpvOpSGreaterThan] = "OpSGreaterThan",
	[SpvOpUGreaterThanEqual] = "OpUGreaterThanEqual",
	[SpvOpSGreaterThanEqual] = "OpSGreaterThanEqual",
	[SpvOpULessThan] = "OpULessThan",
	[SpvOpSLessThan] = "OpSLessThan",
	[SpvOpULessThanEqual] = "OpULessThanEqual",
	[SpvOpSLessThanEqual] = "OpSLessThanEqual",
	[SpvOpFOrdEqual] = "OpFOrdEqual",
	[SpvOpFUnordEqual] = "OpFUnordEqual",
	[SpvOpFOrdNotEqual] = "OpFOrdNotEqual",
	[SpvOpFUnordNotEqual] = "OpFUnordNotEqual",
	[SpvOpFOrdLessThan] = "OpFOrdLessThan",
	[SpvOpFUnordLessThan] = "OpFUnordLessThan",
	[SpvOpFOrdGreaterThan] = "OpFOrdGreaterThan",
	[SpvOpFUnordGreaterThan] = "OpFUnordGreaterThan",
	[SpvOpFOrdLessThanEqual] = "OpFOrdLessThanEqual",
	[SpvOpFUnordLessThanEqual] = "OpFUnordLessThanEqual",
	[SpvOpFOrdGreaterThanEqual] = "OpFOrdGreaterThanEqual",
	[SpvOpFUnordGreaterThanEqual] = "OpFUnordGreaterThanEqual",
	[SpvOpShiftRightLogical] = "OpShiftRightLogical",
	[SpvOpShiftRightArithmetic] = "OpShiftRightArithmetic",
	[SpvOpShiftLeftLogical] = "OpShiftLeftLogical",
	[SpvOpBitwiseOr] = "OpBitwiseOr",
	[SpvOpBitwiseXor] = "OpBitwiseXor",
	[SpvOpBitwiseAnd] = "OpBitwiseAnd",
	[SpvOpNot] = "OpNot",
	[SpvOpBitFieldInsert] = "OpBitFieldInsert",
	[SpvOpBitFieldSExtract] = "OpBitFieldSExtract",
	[SpvOpBitFieldUExtract] = "OpBitFieldUExtract",
	[SpvOpBitReverse] = "OpBitReverse",
	[SpvOpBitCount] = "OpBitCount",
	[SpvOpDPdx] = "OpDPdx",
	[SpvOpDPdy] = "OpDPdy",
	[SpvOpFwidth] = "OpFwidth",
	[SpvOpDPdxFine] = "OpDPdxFine",
	[SpvOpDPdyFine] = "OpDPdyFine",
	[SpvOpFwidthFine] = "OpFwidthFine",
	[SpvOpDPdxCoarse] = "OpDPdxCoarse",
	[SpvOpDPdyCoarse] = "OpDPdyCoarse",
	[SpvOpFwidthCoarse] = "OpFwidthCoarse",
	[SpvOpEmitVertex] = "OpEmitVertex",
	[SpvOpEndPrimitive] = "OpEndPrimitive",
	[SpvOpEmitStreamVertex] = "OpEmitStreamVertex",
	[SpvOpEndStreamPrimitive] = "OpEndStreamPrimitive",
	[SpvOpControlBarrier] = "OpControlBarrier",
	[SpvOpMemoryBarrier] = "OpMemoryBarrier",
	[SpvOpAtomicLoad] = "OpAtomicLoad",
	[SpvOpAtomicStore] = "OpAtomicStore",
	[SpvOpAtomicExchange] = "OpAtomicExchange",
	[SpvOpAtomicCompareExchange] = "OpAtomicCompareExchange",
	[SpvOpAtomicCompareExchangeWeak] = "OpAtomicCompareExchangeWeak",
	[SpvOpAtomicIIncrement] = "OpAtomicIIncrement",
	[SpvOpAtomicIDecrement] = "OpAtomicIDecrement",
	[SpvOpAtomicIAdd] = "OpAtomicIAdd",
	[SpvOpAtomicISub] = "OpAtomicISub",
	[SpvOpAtomicSMin] = "OpAtomicSMin",
	[SpvOpAtomicUMin] = "OpAtomicUMin",
	[SpvOpAtomicSMax] = "OpAtomicSMax",
	[SpvOpAtomicUMax] = "OpAtomicUMax",
	[SpvOpAtomicAnd] = "OpAtomicAnd",
	[SpvOpAtomicOr] = "OpAtomicOr",
	[SpvOpAtomicXor] = "OpAtomicXor",
	[SpvOpPhi] = "OpPhi",
	[SpvOpLoopMerge] = "OpLoopMerge",
	[SpvOpSelectionMerge] = "OpSelectionMerge",
	[SpvOpLabel] = "OpLabel",
	[SpvOpBranch] = "OpBranch",
	[SpvOpBranchConditional] = "OpBranchConditional",
	[SpvOpSwitch] = "OpSwitch",
	[SpvOpKill] = "OpKill",
	[SpvOpReturn] = "OpReturn",
	[SpvOpReturnValue] = "OpReturnValue",
	[SpvOpUnreachable] = "OpUnreachable",
	[SpvOpLifetimeStart] = "OpLifetimeStart",
	[SpvOpLifetimeStop] = "OpLifetimeStop",
	[SpvOpGroupAsyncCopy] = "OpGroupAsyncCopy",
	[SpvOpGroupWaitEvents] = "OpGroupWaitEvents",
	[SpvOpGroupAll] = "OpGroupAll",
	[SpvOpGroupAny] = "OpGroupAny",
	[SpvOpGroupBroadcast] = "OpGroupBroadcast",
	[SpvOpGroupIAdd] = "OpGroupIAdd",
	[SpvOpGroupFAdd] = "OpGroupFAdd",
	[SpvOpGroupFMin] = "OpGroupFMin",
	[SpvOpGroupUMin] = "OpGroupUMin",
	[SpvOpGroupSMin] = "OpGroupSMin",
	[SpvOpGroupFMax] = "OpGroupFMax",
	[SpvOpGroupUMax] = "OpGroupUMax",
	[SpvOpGroupSMax] = "OpGroupSMax",
	[SpvOpReadPipe] = "OpReadPipe",
	[SpvOpWritePipe] = "OpWritePipe",
	[SpvOpReservedReadPipe] = "OpReservedReadPipe",
	[SpvOpReservedWritePipe] = "OpReservedWritePipe",
	[SpvOpReserveReadPipePackets] = "OpReserveReadPipePackets",
	[SpvOpReserveWritePipePackets] = "OpReserveWritePipePackets",
	[SpvOpCommitReadPipe] = "OpCommitReadPipe",
	[SpvOpCommitWritePipe] = "OpCommitWritePipe",
	[SpvOpIsValidReserveId] = "OpIsValidReserveId",
	[SpvOpGetNumPipePackets] = "OpGetNumPipePackets",
	[SpvOpGetMaxPipePackets] = "OpGetMaxPipePackets",
	[SpvOpGroupReserveReadPipePackets] = "OpGroupReserveReadPipePackets",
	[SpvOpGroupReserveWritePipePackets] = "OpGroupReserveWritePipePackets",
	[SpvOpGroupCommitReadPipe] = "OpGroupCommitReadPipe",
	[SpvOpGroupCommitWritePipe] = "OpGroupCommitWritePipe",
	[SpvOpEnqueueMarker] = "OpEnqueueMarker",
	[SpvOpEnqueueKernel] = "OpEnqueueKernel",
	[SpvOpGetKernelNDrangeSubGroupCount] = "OpGetKernelNDrangeSubGroupCount",
	[SpvOpGetKernelNDrangeMaxSubGroupSize] = "OpGetKernelNDrangeMaxSubGroupSize",
	[SpvOpGetKernelWorkGroupSize] = "OpGetKernelWorkGroupSize",
	[SpvOpGetKernelPreferredWorkGroupSizeMultiple] = "OpGetKernelPreferredWorkGroupSizeMultiple",
	[SpvOpRetainEvent] = "OpRetainEvent",
	[SpvOpReleaseEvent] = "OpReleaseEvent",
	[SpvOpCreateUserEvent] = "OpCreateUserEvent",
	[SpvOpIsValidEvent] = "OpIsValidEvent",
	[SpvOpSetUserEventStatus] = "OpSetUserEventStatus",
	[SpvOpCaptureEventProfilingInfo] = "OpCaptureEventProfilingInfo",
	[SpvOpGetDefaultQueue] = "OpGetDefaultQueue",
	[SpvOpBuildNDRange] = "OpBuildNDRange",
	[SpvOpImageSparseSampleImplicitLod] = "OpImageSparseSampleImplicitLod",
	[SpvOpImageSparseSampleExplicitLod] = "OpImageSparseSampleExplicitLod",
	[SpvOpImageSparseSampleDrefImplicitLod] = "OpImageSparseSampleDrefImplicitLod",
	[SpvOpImageSparseSampleDrefExplicitLod] = "OpImageSparseSampleDrefExplicitLod",
	[SpvOpImageSparseSampleProjImplicitLod] = "OpImageSparseSampleProjImplicitLod",
	[SpvOpImageSparseSampleProjExplicitLod] = "OpImageSparseSampleProjExplicitLod",
	[SpvOpImageSparseSampleProjDrefImplicitLod] = "OpImageSparseSampleProjDrefImplicitLod",
	[SpvOpImageSparseSampleProjDrefExplicitLod] = "OpImageSparseSampleProjDrefExplicitLod",
	[SpvOpImageSparseFetch] = "OpImageSparseFetch",
	[SpvOpImageSparseGather] = "OpImageSparseGather",
	[SpvOpImageSparseDrefGather] = "OpImageSparseDrefGather",
	[SpvOpImageSparseTexelsResident] = "OpImageSparseTexelsResident",
	[SpvOpNoLine] = "OpNoLine",
	[SpvOpAtomicFlagTestAndSet] = "OpAtomicFlagTestAndSet",
	[SpvOpAtomicFlagClear] = "OpAtomicFlagClear",
	[SpvOpImageSparseRead] = "OpImageSparseRead",
	[SpvOpSizeOf] = "OpSizeOf",
	[SpvOpTypePipeStorage] = "OpTypePipeStorage",
	[SpvOpConstantPipeStorage] = "OpConstantPipeStorage",
	[SpvOpCreatePipeFromPipeStorage] = "OpCreatePipeFromPipeStorage",
	[SpvOpGetKernelLocalSizeForSubgroupCount] = "OpGetKernelLocalSizeForSubgroupCount",
	[SpvOpGetKernelMaxNumSubgroups] = "OpGetKernelMaxNumSubgroups",
	[SpvOpTypeNamedBarrier] = "OpTypeNamedBarrier",
	[SpvOpNamedBarrierInitialize] = "OpNamedBarrierInitialize",
	[SpvOpMemoryNamedBarrier] = "OpMemoryNamedBarrier",
	[SpvOpModuleProcessed] = "OpModuleProcessed",
	[SpvOpExecutionModeId] = "OpExecutionModeId",
	[SpvOpDecorateId] = "OpDecorateId",
	[SpvOpSubgroupBallotKHR] = "OpSubgroupBallotKHR",
	[SpvOpSubgroupFirstInvocationKHR] = "OpSubgroupFirstInvocationKHR",
	[SpvOpSubgroupAllKHR] = "OpSubgroupAllKHR",
	[SpvOpSubgroupAnyKHR] = "OpSubgroupAnyKHR",
	[SpvOpSubgroupAllEqualKHR] = "OpSubgroupAllEqualKHR",
	[SpvOpSubgroupReadInvocationKHR] = "OpSubgroupReadInvocationKHR",
	[SpvOpGroupIAddNonUniformAMD] = "OpGroupIAddNonUniformAMD",
	[SpvOpGroupFAddNonUniformAMD] = "OpGroupFAddNonUniformAMD",
	[SpvOpGroupFMinNonUniformAMD] = "OpGroupFMinNonUniformAMD",
	[SpvOpGroupUMinNonUniformAMD] = "OpGroupUMinNonUniformAMD",
	[SpvOpGroupSMinNonUniformAMD] = "OpGroupSMinNonUniformAMD",
	[SpvOpGroupFMaxNonUniformAMD] = "OpGroupFMaxNonUniformAMD",
	[SpvOpGroupUMaxNonUniformAMD] = "OpGroupUMaxNonUniformAMD",
	[SpvOpGroupSMaxNonUniformAMD] = "OpGroupSMaxNonUniformAMD",
	[SpvOpFragmentMaskFetchAMD] = "OpFragmentMaskFetchAMD",
	[SpvOpFragmentFetchAMD] = "OpFragmentFetchAMD",
	[SpvOpSubgroupShuffleINTEL] = "OpSubgroupShuffleINTEL",
	[SpvOpSubgroupShuffleDownINTEL] = "OpSubgroupShuffleDownINTEL",
	[SpvOpSubgroupShuffleUpINTEL] = "OpSubgroupShuffleUpINTEL",
	[SpvOpSubgroupShuffleXorINTEL] = "OpSubgroupShuffleXorINTEL",
	[SpvOpSubgroupBlockReadINTEL] = "OpSubgroupBlockReadINTEL",
	[SpvOpSubgroupBlockWriteINTEL] = "OpSubgroupBlockWriteINTEL",
	[SpvOpSubgroupImageBlockReadINTEL] = "OpSubgroupImageBlockReadINTEL",
	[SpvOpSubgroupImageBlockWriteINTEL] = "OpSubgroupImageBlockWriteINTEL",
	[SpvOpDecorateStringGOOGLE] = "OpDecorateStringGOOGLE",
	[SpvOpMemberDecorateStringGOOGLE] = "OpMemberDecorateStringGOOGLE",
};

const char *spirv_op_name(SpvOp e) {
	return SPIRV_OPS[e];
}

#endif // JS_SPIRV_NAMES_IMPLEMENTATION

const char *spirv_source_language_name(SpvSourceLanguage e);
const char *spirv_execution_model_name(SpvExecutionModel e);
const char *spirv_addressing_model_name(SpvAddressingModel e);
const char *spirv_memory_model_name(SpvMemoryModel e);
const char *spirv_execution_mode_name(SpvExecutionMode e);
const char *spirv_dim_name(SpvDim e);
const char *spirv_storage_class_name(SpvStorageClass e);
const char *spirv_sampler_addressing_mode_name(SpvSamplerAddressingMode e);
const char *spirv_sampler_filter_mode_name(SpvSamplerFilterMode e);
const char *spirv_image_format_name(SpvImageFormat e);
const char *spirv_image_channel_order_name(SpvImageChannelOrder e);
const char *spirv_image_channel_datatype_name(SpvImageChannelDataType e);
const char *spirv_image_operands_name(SpvImageOperandsMask e);
const char *spirv_fp_fastmath_mode_name(SpvFPFastMathModeMask e);
const char *spirv_fp_rounding_mode_name(SpvFPRoundingMode e);
const char *spirv_linkage_type_name(SpvLinkageType e);
const char *spirv_access_qualifier_name(SpvAccessQualifier e);
const char *spirv_function_parameter_attribute_name(SpvFunctionParameterAttribute e);
const char *spirv_decoration_name(SpvDecoration e);
const char *spirv_builtin_name(SpvBuiltIn e);
const char *spirv_selection_control_name(SpvSelectionControlMask e);
const char *spirv_loop_control_name(SpvLoopControlMask e);
const char *spirv_function_control_name(SpvFunctionControlMask e);
const char *spirv_memory_semantics_name(SpvMemorySemanticsMask e);
const char *spirv_memory_access_name(SpvMemoryAccessMask e);
const char *spirv_scope_name(SpvScope e);
const char *spirv_group_operation_name(SpvGroupOperation e);
const char *spirv_kernel_enqueue_flags_name(SpvKernelEnqueueFlags e);
const char *spirv_kernel_profiling_info_name(SpvKernelProfilingInfoMask e);
const char *spirv_capability_name(SpvCapability e);
const char *spirv_op_name(SpvOp e);

extern const char *SPIRV_SOURCE_LANGUAGES[];
extern const char *SPIRV_EXECUTION_MODELS[];
extern const char *SPIRV_ADDRESSING_MODELS[];
extern const char *SPIRV_MEMORY_MODELS[];
extern const char *SPIRV_EXECUTION_MODES[];
extern const char *SPIRV_DIMS[];
extern const char *SPIRV_STORAGE_CLASSES[];
extern const char *SPIRV_SAMPLER_ADDRESSING_MODES[];
extern const char *SPIRV_SAMPLER_FILTER_MODES[];
extern const char *SPIRV_IMAGE_FORMATS[];
extern const char *SPIRV_IMAGE_CHANNEL_ORDERS[];
extern const char *SPIRV_IMAGE_CHANNEL_DATATYPES[];
extern const char *SPIRV_IMAGE_OPERANDS[];
extern const char *SPIRV_FP_FASTMATH_MODE[];
extern const char *SPIRV_FP_ROUNDING_MODES[];
extern const char *SPIRV_LINKAGE_TYPES[];
extern const char *SPIRV_ACCESS_QUALIFIERS[];
extern const char *SPIRV_FUNCTION_PARAMETER_ATTRIBUTE[];
extern const char *SPIRV_DECORATIONS[];
extern const char *SPIRV_BUILT_INS[];
extern const char *SPIRV_SELECTION_CONTROL[];
extern const char *SPIRV_LOOP_CONTROL[];
extern const char *SPIRV_FUNCTION_CONTROL[];
extern const char *SPIRV_MEMORY_SEMANTICS[];
extern const char *SPIRV_MEMORY_ACCESS[];
extern const char *SPIRV_SCOPES[];
extern const char *SPIRV_GROUP_OPERATIONS[];
extern const char *SPIRV_KERNEL_ENQUEUE_FLAGS[];
extern const char *SPIRV_KERNEL_PROFILING_INFO[];
extern const char *SPIRV_CAPABILITIES[];
extern const char *SPIRV_OPS[];


#endif // JS_SPIRV_NAMES_H
